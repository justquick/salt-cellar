name: PyTest

# define when to run the action
on:
  - push
  - pull_request
  - workflow_dispatch

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    # test matrix
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - 3.6
          - 3.7
          - 3.8
          - 3.9
          - "3.10"

    steps:
      # check out revision to test
      - uses: actions/checkout@v2

      # install python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # upgrade pip
      - name: Update pip/pipenv
        run: python -m pip install --upgrade pip pipenv wheel

      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}


      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: pipenv install pynacl click aiofiles pytest pytest-asyncio pytest-cov coverage --python python${{ matrix.python-version }}

      - name: Install package
        run: pipenv run python setup.py develop

      - name: Run tests
        run: pipenv run pytest -sx --cov=cellar 

      - name: Coverage report
        run: pipenv run coverage xml

      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.2.0
        with:
          filename: coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md